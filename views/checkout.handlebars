
<div class="content">
    <!--Main Row-->
    <div class=row>
        <!--Left Column For Cart/Total Information-->
        <div class="costpage col-md-7">

            <!-- Center Page break-->



            <div class="cartBreakdown row">
                <h2>Cart:</h2>



                <!-- ORDER SUMMARY ---->




                <!-- Horizontal Page break-->
                <div class="horz_line"></div>
            </div>




            <div class="cartTotal row">
                <div class="col-sm-12">

                    <div class="row totalTitle ">
                        <div class="col-sm-12">
                            <h2>Order Summary:</h2>
                        </div>
                    </div>
                    <div class="row subTotal">
                        <div class="col-sm-12">
                            <div class="subTotalTitle">
                                <p>Sub-Total:</p>
                            </div>
                            <div class="subTotalPrice">$7.20</div>
                        </div>
                    </div>
                    <div class="row tax">
                        <div class="col-sm-12">
                            <div class="taxTitle">
                                <p>Tax:</p>
                            </div>
                            <div class="taxPrice">$0.52</div>

                        </div>
                    </div>
                    <div class="lineBreak row">
                        <div class="col-sm-1"></div>
                        <div class="col-sm-10">
                            <div class="lightHorzLine"></div>
                        </div>
                        <div class="col-sm-1"></div>
                    </div>

                    <div class="row orderTotal">
                        <div class="col-sm-12">
                            <div class="orderTotalText">
                                <p>Order Total:</p>
                            </div>
                            <div class="orderTotalPrice" id="orderTotalPrice">$0.52</div>

                        </div>
                    </div>




                </div>


                <!-- Right Vertical line-->
                <div class="horz_line_order"></div>
            </div>
        </div>

        <!--Right Column For Checkout Information-->
        <div class="col-md-5">
            <div class="vert_line"></div>
              <div id="paymentArea">
               
                   <form action="/checkout/charge" method="post" id="payment-form">
                       <!--<div class="form-row">-->
                            <label for="card-element">
                                 Credit or debit card
                            </label>
                            <div id="card-element" class="mt-2">
                                  <!-- A Stripe Element will be inserted here. -->
                            </div>

                            <!-- Used to display form errors. -->
                            <div id="card-errors" role="alert"></div>
                      <!-- </div>-->

                     <button class="mt-4">Submit Payment</button>
                  </form>
                <script src="https://js.stripe.com/v3/"></script>
                <script>
                        // Create a Stripe client.
                        var stripe = Stripe('PUBLIC KEY');//CHANGE IT T YOUR OWN

                        // Create an instance of Elements.
                        var elements = stripe.elements();

                        // Custom styling can be passed to options when creating an Element.
                        // (Note that this demo uses a wider set of styles than the guide below.)
                        var style = {
                                 base: {
                                        color: '#32325d',
                                                 width:'auto',
                                                 height:'auto',
                                                lineHeight: '18px',
                                                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                                                fontSmoothing: 'antialiased',
                                                fontSize: '16px',
                                                '::placeholder': {
                                                 color: '#aab7c4',}
                                                
                               },
                               invalid: {
                                 color: '#fa755a',
                                 iconColor: '#fa755a'
                               }
                       };

                    // Create an instance of the card Element.
                        var card = elements.create('card', { style: style });

                    // Add an instance of the card Element into the `card-element` <div>.
                    card.mount('#card-element');

                    // Handle real-time validation errors from the card Element.
                    card.addEventListener('change', function (event) {
                            var displayError = document.getElementById('card-errors');
                             if (event.error) {
                                  displayError.textContent = event.error.message;
                             } else {
                                 displayError.textContent = '';
                               }
                    });

                    // Handle form submission.
                    var form = document.getElementById('payment-form');
                    form.addEventListener('submit', function (event) {
                            event.preventDefault();
                            stripe.createPaymentMethod({
                                type: 'card',
                                card: card,
                                billing_details: {
                                        // Include any additional collected billing details.
                                     name: 'Jenny Rosen',
                                },
                            }).then(result=>{
                                    if (result.error) {
                                            // Show error in payment form
                                   } else {
                                // Otherwise send paymentMethod.id to your server (see Step 4)
                                      $.ajax({
                                        method: "POST",
                                       url: "/checkout/charge",
                                      data: {  payment_method_id: result.paymentMethod.id,}
        
                                     }).then(function(message){ 
                                         console.log(message)
                                         if(message.success){
                                            alert("Your Payment was successfull!!");
                                            window.location.replace("/menu");
                                         }   
                                         else{
                                             alert(message.message);
                                         }
                                      });
                                   }  
                            

                                });

                    });
</script>

<style>
  /**
 * The CSS shown here will not be introduced in the Quickstart guide, but shows
 * how you can use CSS to style your Element's container.
 */

  .StripeElement {
    background-color: white;
    height: 40px;
    padding: 10px 12px;
    border-radius: 4px;
    border: 1px solid transparent;
    box-shadow: 0 1px 3px 0 #e6ebf1;
    -webkit-transition: box-shadow 150ms ease;
    transition: box-shadow 150ms ease;
  }

  .StripeElement--focus {
    box-shadow: 0 1px 3px 0 #cfd7df;
  }

  .StripeElement--invalid {
    border-color: #fa755a;
  }

  .StripeElement--webkit-autofill {
    background-color: #fefde5 !important;
  }
</style>


                    
               
             
<!--///////////////////////////////////////////////////////////////////////////////-->
             </div>
        </div>     


</div>


<script>




function startPageFunc(){
     
    $.ajax({
        method: "POST",
        url: "/checkout/getOrderItems",
        
    }).done(function (response) {
            
            $(".subTotalPrice").html(`$${response[0].subtotal}`)
            const taxes = response[0].subtotal*.075;
            $(".taxPrice").html(`$${taxes.toFixed(2)}`)
            const total = (response[0].subtotal + taxes)
            $(".orderTotalPrice").html(`$${total.toFixed(2)}`);
            

            for(orderItems in response){
                 let currentSubItemList = ""

                let currentAddons = JSON.parse(response[orderItems].addons);

            $.ajax({
               method: "POST",
               url: "/checkout/getProduct",
               data: { productId:response[orderItems].productId}
        
            }).then(function(product){ 
            
               
            for (let addon =0 ;addon<currentAddons.length;addon++) {
                for (ans in currentAddons[addon].question.answers){
                

                let currentText = `<div class='row subItem'><p class='leftText text1'>${currentAddons[addon].question.answers[ans].title}</p><p class='rightText text2'>$${currentAddons[addon].question.answers[ans].price}</p></div>`
                        currentSubItemList += currentText;
                }
                    }
                   


                   
                $(".cartBreakdown").append(`<div class='item row' id='item_${orderItems}'><p class='itemname itemName${orderItems}' state='closed'>${product.name}<i class='fas fa-caret-right'></i></p><p class='itemPrice'>$${product.basePrice} </p><div class='itemizedList'> ${currentSubItemList}  </div></div>`)


            
            } ).then(function(){
                    $(".itemName"+orderItems).on("click", function (event) {
                        let state = $(event.target).attr("state");
                        if (state === "open") {
                            $(event.target).attr("state", "closed")
                            $(event.target).parent().children(".itemizedList").css("height", "0px").css("padding", "0px")
                            $(event.target).parent().children(".itemizedList").css("margin-bottom", "0px");
                            $(event.target).children("i").css("transform", "rotate(0deg)")
                        } else {
                            $(event.target).attr("state", "open")
                    
                            let sectionHeight = $(event.target).parent().children(".itemizedList")[0].scrollHeight;
                    
                            $(event.target).parent().children(".itemizedList").css("height", (sectionHeight + 10) + "px").css("padding", "0px");
                            $(event.target).parent().children(".itemizedList").css("margin-bottom", "40px");
                            $(event.target).children("i").css("transform", "rotate(90deg)")
                        }
                    
                    });
                    
                });
            }
         
                    
        });
    }




document.addEventListener("DOMContentLoaded", function(event) { 
startPageFunc()

});

</script>